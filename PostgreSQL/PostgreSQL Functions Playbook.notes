START: 12:32pm 2020.12.19
- 2 Introducing Built In Functions in PostgreSQL
    - The most important functions have become part of the ANSI standard that ANSI-compliant DBs have to support
    - TODO: set up docker with test database
STOP: 12:45pm
START: 10:12pm 2020.12.20
- Finished setup of test DB
- 3 Understanding Data Types:
    - ANSI SQL Data types
        - Character, Binary, Numeric (exact, approximate), Date/time types, boolean, array
    - Special PostgreSQL types
        - UUID, XML (ANSI 2013), JSON (ANSI 2016)
        - Many others listed, should get to them if relevant
    - ::<TYPE> - cast
    - TEXT - PostgreSQL extension to character types
    - Numerics
        - Integers (smallint, int(4), bigint)
        - Arbitrary Precision Numbers (exact) (NUMERIC, DECIMAL)
        - Floating Point Types (approximate) (FLOAT4, FLOAT8, FLOAT(n))
        - Monetary Types (exact) - MONEY
    - Date, Time, Interval Types
        - timestamps w/ and w/o TZ - two different flavores
        - INTERVAL - gap between to timestamps
        - DATE and TIME separately
    - Boolean
        - NULL:BOOL = "Unknown"
    - Array
        - <type>[][]...
        - 1 based arrays
    - UUID
        - 128 bit value
        - 10^-37 -> chance of collision
        - Can adjust groupings
    - XML
        - Built in XML validation for valid XML string
        - SELECT XML "<xml string>" automatically casts
    - JSON types
        - JSON, JSONB (B for binary format, faster performance, indexable)
    - Range types
        - INT4RANGE, INT8RANGE, TSRANGE, etc.
STOP: 10:40pm
START: 11:40pm 12.21.2020
- 4 Doing Math with Operators and Functions:
    - Math Operators:
        - Operators were covered in an earlier module
        - ||/ - cube root, ! - factorial
        - A number of binary operators exist as well (&, |, #, etc)
    - Scalar Functions:
        - LOG(2, 8) - logarithm
        - LN(42) - natural logarithm
        - FLOOR, CEIL, DEGREES, RADIANS, etc.
        - SETSEED(), RANDOM() -> random number
        - WIDTH_BUCKET(valueToBucket, startRange, endRange, numberOfBuckets);
    - Trigonometric Functions:
        - SIN, COS, TAN, arc counterparts lead with a
        - SIND, COSD, COTD, TAND - trig functions w/ degress parameters
    - Aggregate functions: already covered
    - Statistical Analysis: 18 stat functions supported - variance, correlation, standard deviance, etc.
        - Ordered set aggregation functions also exist
    - Formatting functions:
        - TO_NUMBER('1,000', '9,999')::INT - first parameter is string to parse, second is format string
            - 'SL' - locale based money symbol
            - 'D' - locale based comma
        - TO_CHAR() - converts number to formatted string
STOP: 11:59PM :)